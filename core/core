#!/bin/bash

# vm::os get the system os
vm::os() {
  local os="linux"

  uname -a | grep "Darwin" >>/dev/null 2>&1
  if [ $? == 0 ]; then
    os=darwin
  fi

  echo $os
}

# vm::arch gets the system arch
vm::arch() {
  local arch="x64"

  uname -m | grep "arm64" >>/dev/null 2>&1
  if [ $? == 0 ]; then
    arch=arm64
    echo $arch
    return
  fi

  uname -m | grep "armv7" >>/dev/null 2>&1
  if [ $? == 0 ]; then
    arch=armv7l
    echo $arch
    return
  fi

  uname -m | grep "aarch64" >>/dev/null 2>&1
  if [ $? == 0 ]; then
    arch=arm64
    echo $arch
    return
  fi

  echo $arch
}

# vm::tool_ensure ensures that the tool is installed.
vm::tool_ensure() {
  local tool=$1
  which $tool >>/dev/null 2>&1
  if [ "$?" != "0" ]; then
    pm install $tool
  fi
}

# vm::sudo_ensure ensures sudo permissions
vm::sudo_ensure() {
  # @TODO force sudo
  sudo ls >>/dev/null 2>&1
}

# vm::ensure ensures that the necessary tools are installed and sudo.
vm::ensure() {
  vm::sudo_ensure
  vm::tool_ensure wget
  vm::tool_ensure curl
}

# fix version: v1.15.7 => 1.15.7
vm::version_remove_v() {
  local version=$1
  echo ${version#v}
}

# vm::version_parse remove the prefix v
# example: v1.15.7 => 1.15.7
vm::version_parse() {
  local version=$(vm::version_remove_v "$@")
  if [ -z "$1" ] || [ -z "$version" ]; then
    log::error "[vm::version_parse] version is required"
    exit 1
  fi

  echo $version
}

vm::version_ensure_prefix_v() {
  local version=$1
  if [ -z "$version" ]; then
    log::error "[vm::version_ensure_prefix_v] version is required"
    exit 1
  fi

  # 14.x => 14
  # 16.x => 16
  version=${version//.x/}

  # 14 => v14
  # 16 => v16
  if [ "${version:0:1}" != "v" ]; then
    version="v$version"
  fi

  echo $version
}

# get latest version according to the version provided
vm::get_latest_version() {
  local version=$1
  if [ -z "$version" ]; then
    log::error "[vm::get_latest_version] version is required"
    exit 1
  fi

  nvm::list_remote | grep $version | sort -V | tail -n 1
}

export -f vm::os
export -f vm::arch

export -f vm::tool_ensure
export -f vm::sudo_ensure

export -f vm::ensure

export -f vm::version_remove_v
export -f vm::version_parse
export -f vm::version_ensure_prefix_v

export -f vm::get_latest_version
