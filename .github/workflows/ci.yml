name: Test

on:
  push:
    tags:
      - "v*"
    branches:
      - master
  pull_request:
    branches:
      - master
  # schedule:
  #   - cron: "0 2 * * *"

jobs:
  on-success:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && needs.test.result == 'success' }}
    steps:
      - name: Notification Feishu
        uses: whatwewant/action-robot-feishu@v0.0.13
        with:
          url: ${{ secrets.WORKFLOW_FEISHU_BOT_WEBHOOK_URL }}
          title: "✅ 自动化测试：${{ github.repository }}"
          text: |
            分支: ${{ github.ref }}
            提交信息: ${{ github.event.head_commit.message }}
            提交人: ${{ github.actor }}
            状态: 构建成功（https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}）

  on-failure:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ always() && needs.test.result == 'failure' }}
    steps:
      - name: Notification Feishu
        uses: whatwewant/action-robot-feishu@v0.0.13
        with:
          url: ${{ secrets.WORKFLOW_FEISHU_BOT_WEBHOOK_URL }}
          title: "❌ 自动化测试：${{ github.repository }}"
          text: |
            分支: ${{ github.ref }}
            提交信息: ${{ github.event.head_commit.message }}
            提交人: ${{ github.actor }}
            状态: 构建失败（https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}）

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Get Current Date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Install
        run: ./install

      - name: Show Version
        run: |
          zmicro nvm -v
          export PATH=$(zmicro bin path):$PATH
          nvm -v
      
      - name: Run Test Cases
        run: zmicro test core

      - name: Use Default
        run: |
          zmicro nvm use default
          export PATH=$(zmicro nvm bin):$PATH
          node --version

      - name: Use LTS
        run: |
          zmicro nvm use lts
          export PATH=$(zmicro nvm bin):$PATH
          node --version

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: matrix.os == 'ubuntu-latest'
        run: zmicro package install --bootstrap-service docker-buildx

      - name: Test in Docker
        if: matrix.os == 'ubuntu-latest'
        run: |
          export VERSION=$(echo ${GITHUB_REF} | sed -e "s%refs/tags/%%g")
          docker build --build-arg VERSION=${{ steps.meta.outputs.version }} -t nvm:debian -f ./Dockerfile .
